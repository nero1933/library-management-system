services:
  app:
    build: ./app
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
      - ./data/web:/vol/web
    depends_on:
      - db
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - REFRESH_TOKEN_EXPIRE_MINUTES=${REFRESH_TOKEN_EXPIRE_MINUTES}
      - MAX_BORROWS=${MAX_BORROWS}
    networks:
      - mynetwork

  db:
    container_name: db
    image: postgres:16.2-alpine
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'" ]
      interval: 3s
      timeout: 3s
      retries: 3
    networks:
      - mynetwork

volumes:
  postgres-data:

networks:
  mynetwork:
    driver: bridge
